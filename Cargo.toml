[package]
name = "eprice"
version = "0.1.0"
authors = ["qqke <qwxd0827@gmail.com>"]
edition = "2024"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.86"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.32.3"
eframe = { version = "0.32.3", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
serde_json = "1.0"
walkers = "0.45.0"
geo = { version = "0.31.0", features = ["use-serde"] }
chrono = { version = "0.4.40", features = ["serde"] }
egui_extras = "0.32.3"

# Database and authentication (native-only; wasm 构建不需要)
bcrypt = "0.15"
uuid = { version = "1.0", features = ["v4", "serde", "js"] }

# OCR and image processing (disabled due to system dependencies)
# leptess = "0.14"
# image = { version = "0.25", features = ["jpeg", "png"] }

# Error handling and utilities
anyhow = "1.0"
thiserror = "2.0.16"
once_cell = "1.19"
regex = "1.10"

# Async support
futures = "0.3"

# Testing dependencies
[dev-dependencies]
tokio-test = "0.4"
mockall = "0.13.1"
tempfile = "3.8"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"
# Additional native dependencies for file operations, camera access
rfd = "0.15"  # For file dialogs
nokhwa = { version = "0.10", features = ["input-msmf"] }  # For camera access (barcode scanning)
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite", "chrono", "uuid"] }
tokio = { version = "1.0", features = ["full"] }

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
web-sys = "0.3.70"           # to access the DOM (to hide the loading text)
# 为不同主版本的 getrandom 启用 wasm 支持（有些间接依赖仍在用 0.2）
getrandom = { version = "0.3", features = ["wasm_js"] }
getrandom02 = { package = "getrandom", version = "0.2", features = ["js"] }

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }

