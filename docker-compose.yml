version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: eprice-backend
    environment:
      - DATABASE_URL=sqlite:///app/data/eprice.db
      - RUST_LOG=info
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
    volumes:
      - backend_data:/app/data
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - eprice-network

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: eprice-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - eprice-network

  database:
    image: postgres:15-alpine
    container_name: eprice-database
    environment:
      - POSTGRES_DB=eprice
      - POSTGRES_USER=eprice
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-defaultpassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eprice"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - eprice-network

  redis:
    image: redis:7-alpine
    container_name: eprice-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - eprice-network

  nginx:
    image: nginx:alpine
    container_name: eprice-proxy
    volumes:
      - ./docker/nginx-proxy.conf:/etc/nginx/nginx.conf
    ports:
      - "443:443"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - eprice-network

volumes:
  backend_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  eprice-network:
    driver: bridge